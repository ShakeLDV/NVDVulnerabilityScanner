import requests
import pandas as pd
import time
from tqdm import tqdm
import os

#Optional API key to input
API_KEY = os.environ.get('nvd_key')

def database(software):
    #NVD API, name ran through it returns a JSON file with the software vulnerability information
    url= "https://services.nvd.nist.gov/rest/json/cves/1.0/"
    payload = {
        'keyword' : software,
        'resultsPerPage' : '1',
        'apiKey' : API_KEY,
        #'pubStartDate' : '2021-09-30T13:00:00:000 UTC-05:00',
        #'pubEndDate' : '2021-12-27T13:36:00:000 UTC-05:00'
    }
    result = (requests.get(url, params=payload))

    result_json = result.json()
    # with open('data.json', 'w') as f:
    #     json.dump(result_json, f)
    return result_json


def open_excel(file_name, sheet="Sheet1"):
    xl_workbook = pd.ExcelFile(file_name)
    software_names = xl_workbook.parse(sheet)
    software_to_list = software_names['Software'].tolist()
    software_to_list = [i.replace("-", " ") for i in software_to_list]
    return software_to_list


def data_extract(softwares):
    final_data = []
    excel_sheet = pd.DataFrame
    for software in tqdm(softwares):
        time.sleep(0.6)
        data = database(software)
        if data['totalResults'] == 0:
            continue
        for i in data['result']['CVE_Items']:
            try:
                excel_sheet = pd.json_normalize(i['impact']['baseMetricV3'])
            except KeyError:
                excel_sheet = pd.json_normalize(i['impact']['baseMetricV2'])
            try:
                excel_sheet.insert(loc=1, column='CVE-ID', value=(i.get('cve', {}).get('CVE_data_meta').get("ID")))
            except:
                pass
            try:
                excel_sheet.insert(loc=2, column='Description', value=(i['cve']['description']['description_data'][0]['value']))
            except:
                pass        
            excel_sheet.insert(loc=0, column='Software', value=(software))
        final_data.append(excel_sheet)
    return final_data

#Change this value to the name of your excel sheet
excel_name = 'test.xlsx'
#You can change the name of the finished output by changing the string here.
excel_output = 'testing.xlsx'
#You can add another argument in here if the Sheet name of the excel sheet is different than the default "Sheet1"
software_list = open_excel(excel_name)
final_data = pd.concat(data_extract(software_list))
final_data.to_excel(excel_output)